/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DocumentsImport } from './routes/documents'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppStockImport } from './routes/_app/stock'
import { Route as AppOrdersImport } from './routes/_app/orders'
import { Route as AppDirectoryImport } from './routes/_app/directory'
import { Route as AppBuildImport } from './routes/_app/build'
import { Route as DocumentsOrdersOrderIdStocktakeReportImport } from './routes/documents/orders/$orderId/stocktake-report'
import { Route as DocumentsOrdersOrderIdShippingLabelImport } from './routes/documents/orders/$orderId/shipping-label'
import { Route as DocumentsOrdersOrderIdPurchaseOrderImport } from './routes/documents/orders/$orderId/purchase-order'
import { Route as DocumentsOrdersOrderIdInvoiceImport } from './routes/documents/orders/$orderId/invoice'
import { Route as DocumentsOrdersOrderIdCommercialInvoiceImport } from './routes/documents/orders/$orderId/commercial-invoice'

// Create/Update Routes

const DocumentsRoute = DocumentsImport.update({
  id: '/documents',
  path: '/documents',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AppStockRoute = AppStockImport.update({
  id: '/stock',
  path: '/stock',
  getParentRoute: () => AppRoute,
} as any)

const AppOrdersRoute = AppOrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => AppRoute,
} as any)

const AppDirectoryRoute = AppDirectoryImport.update({
  id: '/directory',
  path: '/directory',
  getParentRoute: () => AppRoute,
} as any)

const AppBuildRoute = AppBuildImport.update({
  id: '/build',
  path: '/build',
  getParentRoute: () => AppRoute,
} as any)

const DocumentsOrdersOrderIdStocktakeReportRoute =
  DocumentsOrdersOrderIdStocktakeReportImport.update({
    id: '/orders/$orderId/stocktake-report',
    path: '/orders/$orderId/stocktake-report',
    getParentRoute: () => DocumentsRoute,
  } as any)

const DocumentsOrdersOrderIdShippingLabelRoute =
  DocumentsOrdersOrderIdShippingLabelImport.update({
    id: '/orders/$orderId/shipping-label',
    path: '/orders/$orderId/shipping-label',
    getParentRoute: () => DocumentsRoute,
  } as any)

const DocumentsOrdersOrderIdPurchaseOrderRoute =
  DocumentsOrdersOrderIdPurchaseOrderImport.update({
    id: '/orders/$orderId/purchase-order',
    path: '/orders/$orderId/purchase-order',
    getParentRoute: () => DocumentsRoute,
  } as any)

const DocumentsOrdersOrderIdInvoiceRoute =
  DocumentsOrdersOrderIdInvoiceImport.update({
    id: '/orders/$orderId/invoice',
    path: '/orders/$orderId/invoice',
    getParentRoute: () => DocumentsRoute,
  } as any)

const DocumentsOrdersOrderIdCommercialInvoiceRoute =
  DocumentsOrdersOrderIdCommercialInvoiceImport.update({
    id: '/orders/$orderId/commercial-invoice',
    path: '/orders/$orderId/commercial-invoice',
    getParentRoute: () => DocumentsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/documents': {
      id: '/documents'
      path: '/documents'
      fullPath: '/documents'
      preLoaderRoute: typeof DocumentsImport
      parentRoute: typeof rootRoute
    }
    '/_app/build': {
      id: '/_app/build'
      path: '/build'
      fullPath: '/build'
      preLoaderRoute: typeof AppBuildImport
      parentRoute: typeof AppImport
    }
    '/_app/directory': {
      id: '/_app/directory'
      path: '/directory'
      fullPath: '/directory'
      preLoaderRoute: typeof AppDirectoryImport
      parentRoute: typeof AppImport
    }
    '/_app/orders': {
      id: '/_app/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof AppOrdersImport
      parentRoute: typeof AppImport
    }
    '/_app/stock': {
      id: '/_app/stock'
      path: '/stock'
      fullPath: '/stock'
      preLoaderRoute: typeof AppStockImport
      parentRoute: typeof AppImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/documents/orders/$orderId/commercial-invoice': {
      id: '/documents/orders/$orderId/commercial-invoice'
      path: '/orders/$orderId/commercial-invoice'
      fullPath: '/documents/orders/$orderId/commercial-invoice'
      preLoaderRoute: typeof DocumentsOrdersOrderIdCommercialInvoiceImport
      parentRoute: typeof DocumentsImport
    }
    '/documents/orders/$orderId/invoice': {
      id: '/documents/orders/$orderId/invoice'
      path: '/orders/$orderId/invoice'
      fullPath: '/documents/orders/$orderId/invoice'
      preLoaderRoute: typeof DocumentsOrdersOrderIdInvoiceImport
      parentRoute: typeof DocumentsImport
    }
    '/documents/orders/$orderId/purchase-order': {
      id: '/documents/orders/$orderId/purchase-order'
      path: '/orders/$orderId/purchase-order'
      fullPath: '/documents/orders/$orderId/purchase-order'
      preLoaderRoute: typeof DocumentsOrdersOrderIdPurchaseOrderImport
      parentRoute: typeof DocumentsImport
    }
    '/documents/orders/$orderId/shipping-label': {
      id: '/documents/orders/$orderId/shipping-label'
      path: '/orders/$orderId/shipping-label'
      fullPath: '/documents/orders/$orderId/shipping-label'
      preLoaderRoute: typeof DocumentsOrdersOrderIdShippingLabelImport
      parentRoute: typeof DocumentsImport
    }
    '/documents/orders/$orderId/stocktake-report': {
      id: '/documents/orders/$orderId/stocktake-report'
      path: '/orders/$orderId/stocktake-report'
      fullPath: '/documents/orders/$orderId/stocktake-report'
      preLoaderRoute: typeof DocumentsOrdersOrderIdStocktakeReportImport
      parentRoute: typeof DocumentsImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppBuildRoute: typeof AppBuildRoute
  AppDirectoryRoute: typeof AppDirectoryRoute
  AppOrdersRoute: typeof AppOrdersRoute
  AppStockRoute: typeof AppStockRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppBuildRoute: AppBuildRoute,
  AppDirectoryRoute: AppDirectoryRoute,
  AppOrdersRoute: AppOrdersRoute,
  AppStockRoute: AppStockRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface DocumentsRouteChildren {
  DocumentsOrdersOrderIdCommercialInvoiceRoute: typeof DocumentsOrdersOrderIdCommercialInvoiceRoute
  DocumentsOrdersOrderIdInvoiceRoute: typeof DocumentsOrdersOrderIdInvoiceRoute
  DocumentsOrdersOrderIdPurchaseOrderRoute: typeof DocumentsOrdersOrderIdPurchaseOrderRoute
  DocumentsOrdersOrderIdShippingLabelRoute: typeof DocumentsOrdersOrderIdShippingLabelRoute
  DocumentsOrdersOrderIdStocktakeReportRoute: typeof DocumentsOrdersOrderIdStocktakeReportRoute
}

const DocumentsRouteChildren: DocumentsRouteChildren = {
  DocumentsOrdersOrderIdCommercialInvoiceRoute:
    DocumentsOrdersOrderIdCommercialInvoiceRoute,
  DocumentsOrdersOrderIdInvoiceRoute: DocumentsOrdersOrderIdInvoiceRoute,
  DocumentsOrdersOrderIdPurchaseOrderRoute:
    DocumentsOrdersOrderIdPurchaseOrderRoute,
  DocumentsOrdersOrderIdShippingLabelRoute:
    DocumentsOrdersOrderIdShippingLabelRoute,
  DocumentsOrdersOrderIdStocktakeReportRoute:
    DocumentsOrdersOrderIdStocktakeReportRoute,
}

const DocumentsRouteWithChildren = DocumentsRoute._addFileChildren(
  DocumentsRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/documents': typeof DocumentsRouteWithChildren
  '/build': typeof AppBuildRoute
  '/directory': typeof AppDirectoryRoute
  '/orders': typeof AppOrdersRoute
  '/stock': typeof AppStockRoute
  '/': typeof AppIndexRoute
  '/documents/orders/$orderId/commercial-invoice': typeof DocumentsOrdersOrderIdCommercialInvoiceRoute
  '/documents/orders/$orderId/invoice': typeof DocumentsOrdersOrderIdInvoiceRoute
  '/documents/orders/$orderId/purchase-order': typeof DocumentsOrdersOrderIdPurchaseOrderRoute
  '/documents/orders/$orderId/shipping-label': typeof DocumentsOrdersOrderIdShippingLabelRoute
  '/documents/orders/$orderId/stocktake-report': typeof DocumentsOrdersOrderIdStocktakeReportRoute
}

export interface FileRoutesByTo {
  '/documents': typeof DocumentsRouteWithChildren
  '/build': typeof AppBuildRoute
  '/directory': typeof AppDirectoryRoute
  '/orders': typeof AppOrdersRoute
  '/stock': typeof AppStockRoute
  '/': typeof AppIndexRoute
  '/documents/orders/$orderId/commercial-invoice': typeof DocumentsOrdersOrderIdCommercialInvoiceRoute
  '/documents/orders/$orderId/invoice': typeof DocumentsOrdersOrderIdInvoiceRoute
  '/documents/orders/$orderId/purchase-order': typeof DocumentsOrdersOrderIdPurchaseOrderRoute
  '/documents/orders/$orderId/shipping-label': typeof DocumentsOrdersOrderIdShippingLabelRoute
  '/documents/orders/$orderId/stocktake-report': typeof DocumentsOrdersOrderIdStocktakeReportRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/documents': typeof DocumentsRouteWithChildren
  '/_app/build': typeof AppBuildRoute
  '/_app/directory': typeof AppDirectoryRoute
  '/_app/orders': typeof AppOrdersRoute
  '/_app/stock': typeof AppStockRoute
  '/_app/': typeof AppIndexRoute
  '/documents/orders/$orderId/commercial-invoice': typeof DocumentsOrdersOrderIdCommercialInvoiceRoute
  '/documents/orders/$orderId/invoice': typeof DocumentsOrdersOrderIdInvoiceRoute
  '/documents/orders/$orderId/purchase-order': typeof DocumentsOrdersOrderIdPurchaseOrderRoute
  '/documents/orders/$orderId/shipping-label': typeof DocumentsOrdersOrderIdShippingLabelRoute
  '/documents/orders/$orderId/stocktake-report': typeof DocumentsOrdersOrderIdStocktakeReportRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/documents'
    | '/build'
    | '/directory'
    | '/orders'
    | '/stock'
    | '/'
    | '/documents/orders/$orderId/commercial-invoice'
    | '/documents/orders/$orderId/invoice'
    | '/documents/orders/$orderId/purchase-order'
    | '/documents/orders/$orderId/shipping-label'
    | '/documents/orders/$orderId/stocktake-report'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/documents'
    | '/build'
    | '/directory'
    | '/orders'
    | '/stock'
    | '/'
    | '/documents/orders/$orderId/commercial-invoice'
    | '/documents/orders/$orderId/invoice'
    | '/documents/orders/$orderId/purchase-order'
    | '/documents/orders/$orderId/shipping-label'
    | '/documents/orders/$orderId/stocktake-report'
  id:
    | '__root__'
    | '/_app'
    | '/documents'
    | '/_app/build'
    | '/_app/directory'
    | '/_app/orders'
    | '/_app/stock'
    | '/_app/'
    | '/documents/orders/$orderId/commercial-invoice'
    | '/documents/orders/$orderId/invoice'
    | '/documents/orders/$orderId/purchase-order'
    | '/documents/orders/$orderId/shipping-label'
    | '/documents/orders/$orderId/stocktake-report'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  DocumentsRoute: typeof DocumentsRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  DocumentsRoute: DocumentsRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/documents"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/build",
        "/_app/directory",
        "/_app/orders",
        "/_app/stock",
        "/_app/"
      ]
    },
    "/documents": {
      "filePath": "documents.tsx",
      "children": [
        "/documents/orders/$orderId/commercial-invoice",
        "/documents/orders/$orderId/invoice",
        "/documents/orders/$orderId/purchase-order",
        "/documents/orders/$orderId/shipping-label",
        "/documents/orders/$orderId/stocktake-report"
      ]
    },
    "/_app/build": {
      "filePath": "_app/build.tsx",
      "parent": "/_app"
    },
    "/_app/directory": {
      "filePath": "_app/directory.tsx",
      "parent": "/_app"
    },
    "/_app/orders": {
      "filePath": "_app/orders.tsx",
      "parent": "/_app"
    },
    "/_app/stock": {
      "filePath": "_app/stock.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/documents/orders/$orderId/commercial-invoice": {
      "filePath": "documents/orders/$orderId/commercial-invoice.tsx",
      "parent": "/documents"
    },
    "/documents/orders/$orderId/invoice": {
      "filePath": "documents/orders/$orderId/invoice.tsx",
      "parent": "/documents"
    },
    "/documents/orders/$orderId/purchase-order": {
      "filePath": "documents/orders/$orderId/purchase-order.tsx",
      "parent": "/documents"
    },
    "/documents/orders/$orderId/shipping-label": {
      "filePath": "documents/orders/$orderId/shipping-label.tsx",
      "parent": "/documents"
    },
    "/documents/orders/$orderId/stocktake-report": {
      "filePath": "documents/orders/$orderId/stocktake-report.tsx",
      "parent": "/documents"
    }
  }
}
ROUTE_MANIFEST_END */
