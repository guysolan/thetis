/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as HomeRouteImport } from './routes/home'
import { Route as DocumentsRouteImport } from './routes/documents'
import { Route as IndexRouteImport } from './routes/index'
import { Route as HomeIndexRouteImport } from './routes/home/index'
import { Route as TestStockHistoryRouteImport } from './routes/test/stock-history'
import { Route as HomeDirectoryRouteImport } from './routes/home/directory'
import { Route as HomeBuildRouteImport } from './routes/home/build'
import { Route as HomeStockIndexRouteImport } from './routes/home/stock/index'
import { Route as HomeOrdersIndexRouteImport } from './routes/home/orders/index'
import { Route as HomeOrdersOrderIdIndexRouteImport } from './routes/home/orders/$orderId/index'
import { Route as HomeStockHistoryAddressIdRouteImport } from './routes/home/stock/history.$addressId'
import { Route as HomeOrdersOrderIdDetailsRouteImport } from './routes/home/orders/$orderId/details'
import { Route as DocumentsOrdersOrderIdStocktakeReportRouteImport } from './routes/documents/orders/$orderId/stocktake-report'
import { Route as DocumentsOrdersOrderIdShippingLabelRouteImport } from './routes/documents/orders/$orderId/shipping-label'
import { Route as DocumentsOrdersOrderIdPurchaseOrderRouteImport } from './routes/documents/orders/$orderId/purchase-order'
import { Route as DocumentsOrdersOrderIdPackingListRouteImport } from './routes/documents/orders/$orderId/packing-list'
import { Route as DocumentsOrdersOrderIdInvoiceRouteImport } from './routes/documents/orders/$orderId/invoice'
import { Route as DocumentsOrdersOrderIdCommercialInvoiceRouteImport } from './routes/documents/orders/$orderId/commercial-invoice'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRoute = HomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const DocumentsRoute = DocumentsRouteImport.update({
  id: '/documents',
  path: '/documents',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeRoute,
} as any)
const TestStockHistoryRoute = TestStockHistoryRouteImport.update({
  id: '/test/stock-history',
  path: '/test/stock-history',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeDirectoryRoute = HomeDirectoryRouteImport.update({
  id: '/directory',
  path: '/directory',
  getParentRoute: () => HomeRoute,
} as any)
const HomeBuildRoute = HomeBuildRouteImport.update({
  id: '/build',
  path: '/build',
  getParentRoute: () => HomeRoute,
} as any)
const HomeStockIndexRoute = HomeStockIndexRouteImport.update({
  id: '/stock/',
  path: '/stock/',
  getParentRoute: () => HomeRoute,
} as any)
const HomeOrdersIndexRoute = HomeOrdersIndexRouteImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => HomeRoute,
} as any)
const HomeOrdersOrderIdIndexRoute = HomeOrdersOrderIdIndexRouteImport.update({
  id: '/orders/$orderId/',
  path: '/orders/$orderId/',
  getParentRoute: () => HomeRoute,
} as any)
const HomeStockHistoryAddressIdRoute =
  HomeStockHistoryAddressIdRouteImport.update({
    id: '/stock/history/$addressId',
    path: '/stock/history/$addressId',
    getParentRoute: () => HomeRoute,
  } as any)
const HomeOrdersOrderIdDetailsRoute =
  HomeOrdersOrderIdDetailsRouteImport.update({
    id: '/orders/$orderId/details',
    path: '/orders/$orderId/details',
    getParentRoute: () => HomeRoute,
  } as any)
const DocumentsOrdersOrderIdStocktakeReportRoute =
  DocumentsOrdersOrderIdStocktakeReportRouteImport.update({
    id: '/orders/$orderId/stocktake-report',
    path: '/orders/$orderId/stocktake-report',
    getParentRoute: () => DocumentsRoute,
  } as any)
const DocumentsOrdersOrderIdShippingLabelRoute =
  DocumentsOrdersOrderIdShippingLabelRouteImport.update({
    id: '/orders/$orderId/shipping-label',
    path: '/orders/$orderId/shipping-label',
    getParentRoute: () => DocumentsRoute,
  } as any)
const DocumentsOrdersOrderIdPurchaseOrderRoute =
  DocumentsOrdersOrderIdPurchaseOrderRouteImport.update({
    id: '/orders/$orderId/purchase-order',
    path: '/orders/$orderId/purchase-order',
    getParentRoute: () => DocumentsRoute,
  } as any)
const DocumentsOrdersOrderIdPackingListRoute =
  DocumentsOrdersOrderIdPackingListRouteImport.update({
    id: '/orders/$orderId/packing-list',
    path: '/orders/$orderId/packing-list',
    getParentRoute: () => DocumentsRoute,
  } as any)
const DocumentsOrdersOrderIdInvoiceRoute =
  DocumentsOrdersOrderIdInvoiceRouteImport.update({
    id: '/orders/$orderId/invoice',
    path: '/orders/$orderId/invoice',
    getParentRoute: () => DocumentsRoute,
  } as any)
const DocumentsOrdersOrderIdCommercialInvoiceRoute =
  DocumentsOrdersOrderIdCommercialInvoiceRouteImport.update({
    id: '/orders/$orderId/commercial-invoice',
    path: '/orders/$orderId/commercial-invoice',
    getParentRoute: () => DocumentsRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/documents': typeof DocumentsRouteWithChildren
  '/home': typeof HomeRouteWithChildren
  '/login': typeof LoginRoute
  '/home/build': typeof HomeBuildRoute
  '/home/directory': typeof HomeDirectoryRoute
  '/test/stock-history': typeof TestStockHistoryRoute
  '/home/': typeof HomeIndexRoute
  '/home/orders': typeof HomeOrdersIndexRoute
  '/home/stock': typeof HomeStockIndexRoute
  '/documents/orders/$orderId/commercial-invoice': typeof DocumentsOrdersOrderIdCommercialInvoiceRoute
  '/documents/orders/$orderId/invoice': typeof DocumentsOrdersOrderIdInvoiceRoute
  '/documents/orders/$orderId/packing-list': typeof DocumentsOrdersOrderIdPackingListRoute
  '/documents/orders/$orderId/purchase-order': typeof DocumentsOrdersOrderIdPurchaseOrderRoute
  '/documents/orders/$orderId/shipping-label': typeof DocumentsOrdersOrderIdShippingLabelRoute
  '/documents/orders/$orderId/stocktake-report': typeof DocumentsOrdersOrderIdStocktakeReportRoute
  '/home/orders/$orderId/details': typeof HomeOrdersOrderIdDetailsRoute
  '/home/stock/history/$addressId': typeof HomeStockHistoryAddressIdRoute
  '/home/orders/$orderId': typeof HomeOrdersOrderIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/documents': typeof DocumentsRouteWithChildren
  '/login': typeof LoginRoute
  '/home/build': typeof HomeBuildRoute
  '/home/directory': typeof HomeDirectoryRoute
  '/test/stock-history': typeof TestStockHistoryRoute
  '/home': typeof HomeIndexRoute
  '/home/orders': typeof HomeOrdersIndexRoute
  '/home/stock': typeof HomeStockIndexRoute
  '/documents/orders/$orderId/commercial-invoice': typeof DocumentsOrdersOrderIdCommercialInvoiceRoute
  '/documents/orders/$orderId/invoice': typeof DocumentsOrdersOrderIdInvoiceRoute
  '/documents/orders/$orderId/packing-list': typeof DocumentsOrdersOrderIdPackingListRoute
  '/documents/orders/$orderId/purchase-order': typeof DocumentsOrdersOrderIdPurchaseOrderRoute
  '/documents/orders/$orderId/shipping-label': typeof DocumentsOrdersOrderIdShippingLabelRoute
  '/documents/orders/$orderId/stocktake-report': typeof DocumentsOrdersOrderIdStocktakeReportRoute
  '/home/orders/$orderId/details': typeof HomeOrdersOrderIdDetailsRoute
  '/home/stock/history/$addressId': typeof HomeStockHistoryAddressIdRoute
  '/home/orders/$orderId': typeof HomeOrdersOrderIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/documents': typeof DocumentsRouteWithChildren
  '/home': typeof HomeRouteWithChildren
  '/login': typeof LoginRoute
  '/home/build': typeof HomeBuildRoute
  '/home/directory': typeof HomeDirectoryRoute
  '/test/stock-history': typeof TestStockHistoryRoute
  '/home/': typeof HomeIndexRoute
  '/home/orders/': typeof HomeOrdersIndexRoute
  '/home/stock/': typeof HomeStockIndexRoute
  '/documents/orders/$orderId/commercial-invoice': typeof DocumentsOrdersOrderIdCommercialInvoiceRoute
  '/documents/orders/$orderId/invoice': typeof DocumentsOrdersOrderIdInvoiceRoute
  '/documents/orders/$orderId/packing-list': typeof DocumentsOrdersOrderIdPackingListRoute
  '/documents/orders/$orderId/purchase-order': typeof DocumentsOrdersOrderIdPurchaseOrderRoute
  '/documents/orders/$orderId/shipping-label': typeof DocumentsOrdersOrderIdShippingLabelRoute
  '/documents/orders/$orderId/stocktake-report': typeof DocumentsOrdersOrderIdStocktakeReportRoute
  '/home/orders/$orderId/details': typeof HomeOrdersOrderIdDetailsRoute
  '/home/stock/history/$addressId': typeof HomeStockHistoryAddressIdRoute
  '/home/orders/$orderId/': typeof HomeOrdersOrderIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/documents'
    | '/home'
    | '/login'
    | '/home/build'
    | '/home/directory'
    | '/test/stock-history'
    | '/home/'
    | '/home/orders'
    | '/home/stock'
    | '/documents/orders/$orderId/commercial-invoice'
    | '/documents/orders/$orderId/invoice'
    | '/documents/orders/$orderId/packing-list'
    | '/documents/orders/$orderId/purchase-order'
    | '/documents/orders/$orderId/shipping-label'
    | '/documents/orders/$orderId/stocktake-report'
    | '/home/orders/$orderId/details'
    | '/home/stock/history/$addressId'
    | '/home/orders/$orderId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/documents'
    | '/login'
    | '/home/build'
    | '/home/directory'
    | '/test/stock-history'
    | '/home'
    | '/home/orders'
    | '/home/stock'
    | '/documents/orders/$orderId/commercial-invoice'
    | '/documents/orders/$orderId/invoice'
    | '/documents/orders/$orderId/packing-list'
    | '/documents/orders/$orderId/purchase-order'
    | '/documents/orders/$orderId/shipping-label'
    | '/documents/orders/$orderId/stocktake-report'
    | '/home/orders/$orderId/details'
    | '/home/stock/history/$addressId'
    | '/home/orders/$orderId'
  id:
    | '__root__'
    | '/'
    | '/documents'
    | '/home'
    | '/login'
    | '/home/build'
    | '/home/directory'
    | '/test/stock-history'
    | '/home/'
    | '/home/orders/'
    | '/home/stock/'
    | '/documents/orders/$orderId/commercial-invoice'
    | '/documents/orders/$orderId/invoice'
    | '/documents/orders/$orderId/packing-list'
    | '/documents/orders/$orderId/purchase-order'
    | '/documents/orders/$orderId/shipping-label'
    | '/documents/orders/$orderId/stocktake-report'
    | '/home/orders/$orderId/details'
    | '/home/stock/history/$addressId'
    | '/home/orders/$orderId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DocumentsRoute: typeof DocumentsRouteWithChildren
  HomeRoute: typeof HomeRouteWithChildren
  LoginRoute: typeof LoginRoute
  TestStockHistoryRoute: typeof TestStockHistoryRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/documents': {
      id: '/documents'
      path: '/documents'
      fullPath: '/documents'
      preLoaderRoute: typeof DocumentsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home/': {
      id: '/home/'
      path: '/'
      fullPath: '/home/'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof HomeRoute
    }
    '/test/stock-history': {
      id: '/test/stock-history'
      path: '/test/stock-history'
      fullPath: '/test/stock-history'
      preLoaderRoute: typeof TestStockHistoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home/directory': {
      id: '/home/directory'
      path: '/directory'
      fullPath: '/home/directory'
      preLoaderRoute: typeof HomeDirectoryRouteImport
      parentRoute: typeof HomeRoute
    }
    '/home/build': {
      id: '/home/build'
      path: '/build'
      fullPath: '/home/build'
      preLoaderRoute: typeof HomeBuildRouteImport
      parentRoute: typeof HomeRoute
    }
    '/home/stock/': {
      id: '/home/stock/'
      path: '/stock'
      fullPath: '/home/stock'
      preLoaderRoute: typeof HomeStockIndexRouteImport
      parentRoute: typeof HomeRoute
    }
    '/home/orders/': {
      id: '/home/orders/'
      path: '/orders'
      fullPath: '/home/orders'
      preLoaderRoute: typeof HomeOrdersIndexRouteImport
      parentRoute: typeof HomeRoute
    }
    '/home/orders/$orderId/': {
      id: '/home/orders/$orderId/'
      path: '/orders/$orderId'
      fullPath: '/home/orders/$orderId'
      preLoaderRoute: typeof HomeOrdersOrderIdIndexRouteImport
      parentRoute: typeof HomeRoute
    }
    '/home/stock/history/$addressId': {
      id: '/home/stock/history/$addressId'
      path: '/stock/history/$addressId'
      fullPath: '/home/stock/history/$addressId'
      preLoaderRoute: typeof HomeStockHistoryAddressIdRouteImport
      parentRoute: typeof HomeRoute
    }
    '/home/orders/$orderId/details': {
      id: '/home/orders/$orderId/details'
      path: '/orders/$orderId/details'
      fullPath: '/home/orders/$orderId/details'
      preLoaderRoute: typeof HomeOrdersOrderIdDetailsRouteImport
      parentRoute: typeof HomeRoute
    }
    '/documents/orders/$orderId/stocktake-report': {
      id: '/documents/orders/$orderId/stocktake-report'
      path: '/orders/$orderId/stocktake-report'
      fullPath: '/documents/orders/$orderId/stocktake-report'
      preLoaderRoute: typeof DocumentsOrdersOrderIdStocktakeReportRouteImport
      parentRoute: typeof DocumentsRoute
    }
    '/documents/orders/$orderId/shipping-label': {
      id: '/documents/orders/$orderId/shipping-label'
      path: '/orders/$orderId/shipping-label'
      fullPath: '/documents/orders/$orderId/shipping-label'
      preLoaderRoute: typeof DocumentsOrdersOrderIdShippingLabelRouteImport
      parentRoute: typeof DocumentsRoute
    }
    '/documents/orders/$orderId/purchase-order': {
      id: '/documents/orders/$orderId/purchase-order'
      path: '/orders/$orderId/purchase-order'
      fullPath: '/documents/orders/$orderId/purchase-order'
      preLoaderRoute: typeof DocumentsOrdersOrderIdPurchaseOrderRouteImport
      parentRoute: typeof DocumentsRoute
    }
    '/documents/orders/$orderId/packing-list': {
      id: '/documents/orders/$orderId/packing-list'
      path: '/orders/$orderId/packing-list'
      fullPath: '/documents/orders/$orderId/packing-list'
      preLoaderRoute: typeof DocumentsOrdersOrderIdPackingListRouteImport
      parentRoute: typeof DocumentsRoute
    }
    '/documents/orders/$orderId/invoice': {
      id: '/documents/orders/$orderId/invoice'
      path: '/orders/$orderId/invoice'
      fullPath: '/documents/orders/$orderId/invoice'
      preLoaderRoute: typeof DocumentsOrdersOrderIdInvoiceRouteImport
      parentRoute: typeof DocumentsRoute
    }
    '/documents/orders/$orderId/commercial-invoice': {
      id: '/documents/orders/$orderId/commercial-invoice'
      path: '/orders/$orderId/commercial-invoice'
      fullPath: '/documents/orders/$orderId/commercial-invoice'
      preLoaderRoute: typeof DocumentsOrdersOrderIdCommercialInvoiceRouteImport
      parentRoute: typeof DocumentsRoute
    }
  }
}

interface DocumentsRouteChildren {
  DocumentsOrdersOrderIdCommercialInvoiceRoute: typeof DocumentsOrdersOrderIdCommercialInvoiceRoute
  DocumentsOrdersOrderIdInvoiceRoute: typeof DocumentsOrdersOrderIdInvoiceRoute
  DocumentsOrdersOrderIdPackingListRoute: typeof DocumentsOrdersOrderIdPackingListRoute
  DocumentsOrdersOrderIdPurchaseOrderRoute: typeof DocumentsOrdersOrderIdPurchaseOrderRoute
  DocumentsOrdersOrderIdShippingLabelRoute: typeof DocumentsOrdersOrderIdShippingLabelRoute
  DocumentsOrdersOrderIdStocktakeReportRoute: typeof DocumentsOrdersOrderIdStocktakeReportRoute
}

const DocumentsRouteChildren: DocumentsRouteChildren = {
  DocumentsOrdersOrderIdCommercialInvoiceRoute:
    DocumentsOrdersOrderIdCommercialInvoiceRoute,
  DocumentsOrdersOrderIdInvoiceRoute: DocumentsOrdersOrderIdInvoiceRoute,
  DocumentsOrdersOrderIdPackingListRoute:
    DocumentsOrdersOrderIdPackingListRoute,
  DocumentsOrdersOrderIdPurchaseOrderRoute:
    DocumentsOrdersOrderIdPurchaseOrderRoute,
  DocumentsOrdersOrderIdShippingLabelRoute:
    DocumentsOrdersOrderIdShippingLabelRoute,
  DocumentsOrdersOrderIdStocktakeReportRoute:
    DocumentsOrdersOrderIdStocktakeReportRoute,
}

const DocumentsRouteWithChildren = DocumentsRoute._addFileChildren(
  DocumentsRouteChildren,
)

interface HomeRouteChildren {
  HomeBuildRoute: typeof HomeBuildRoute
  HomeDirectoryRoute: typeof HomeDirectoryRoute
  HomeIndexRoute: typeof HomeIndexRoute
  HomeOrdersIndexRoute: typeof HomeOrdersIndexRoute
  HomeStockIndexRoute: typeof HomeStockIndexRoute
  HomeOrdersOrderIdDetailsRoute: typeof HomeOrdersOrderIdDetailsRoute
  HomeStockHistoryAddressIdRoute: typeof HomeStockHistoryAddressIdRoute
  HomeOrdersOrderIdIndexRoute: typeof HomeOrdersOrderIdIndexRoute
}

const HomeRouteChildren: HomeRouteChildren = {
  HomeBuildRoute: HomeBuildRoute,
  HomeDirectoryRoute: HomeDirectoryRoute,
  HomeIndexRoute: HomeIndexRoute,
  HomeOrdersIndexRoute: HomeOrdersIndexRoute,
  HomeStockIndexRoute: HomeStockIndexRoute,
  HomeOrdersOrderIdDetailsRoute: HomeOrdersOrderIdDetailsRoute,
  HomeStockHistoryAddressIdRoute: HomeStockHistoryAddressIdRoute,
  HomeOrdersOrderIdIndexRoute: HomeOrdersOrderIdIndexRoute,
}

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DocumentsRoute: DocumentsRouteWithChildren,
  HomeRoute: HomeRouteWithChildren,
  LoginRoute: LoginRoute,
  TestStockHistoryRoute: TestStockHistoryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
