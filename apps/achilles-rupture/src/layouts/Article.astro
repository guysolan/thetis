---
import type { CollectionEntry } from 'astro:content';
import Layout from './Layout.astro';
import FormattedDate from '../components/FormattedDate.astro';
import UpvoteForm from '../components/UpvoteForm.astro';

type Props = CollectionEntry<'article'>['data'];

const { title, description, pubDate, updatedDate, heroImage, status} = Astro.props;
---

<Layout title={title} description={description}>
	<main class="m-0 w-full max-w-full">
		{status === 'draft' ? (
			<div class="prose-img:border-gray-200/20 prose-img:shadow-xl mx-auto p-4 prose-img:border prose-img:rounded-xl w-[720px] prose-img:w-full prose-img:aspect-[2/1] prose-img:object-cover">
				<div class="mb-4 py-4 text-center">
					<h1 class="mb-2">{title}</h1>
				</div>
				<div class="flex flex-col justify-center items-center">
					  <h2 class="mb-6 text-gray-600 text-xl">
							Would you like to read this article?
						</h2>
					<UpvoteForm articleName={title} />
				</div>
			</div>
		) : (
			<article class="prose-img:border-gray-200/20 prose-img:shadow-xl prose-img:border prose-img:rounded-xl prose-img:w-full prose-img:aspect-[2/1] prose-img:object-cover">
				<div class="mx-auto px-4 w-full max-w-[1020px]">
					{heroImage && (
						<img 
							width={1020} 
							height={510} 
							src={heroImage} 
							alt="" 
							class="border-gray-200/20 shadow-xl my-8 border rounded-xl w-full aspect-[2/1] object-cover" 
						/>
					)}
				</div>
				<div class="mx-auto p-4 w-[720px] max-w-[calc(100%-2em)] text-gray-800">
					<div class="mb-4 py-4 text-center">
						<div class="mb-2 text-gray-600">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="italic">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1 class="mb-2">{title}</h1>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		)}
	</main>
</Layout>

<style>
  :global(article img), :global(.prose img) {
    aspect-ratio: 2/1;
    max-height: none;
    object-fit: cover;
    border: 1px solid rgb(229, 231, 235);
    border-radius: 0.5rem;
    margin: 2rem auto;
    background: white;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
                0 4px 6px -2px rgba(0, 0, 0, 0.05);
    transition: all 0.2s ease-in-out;
  }

  :global(article img:hover), :global(.prose img:hover) {
    transform: translateY(-2px);
    border-color: rgb(209, 213, 219);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
                0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }

  :global(table) {
    width: 100%;
    border-collapse: collapse;
    margin: 1.5rem 0;
  }

  :global(th), :global(td) {
    padding: 0.75rem;
    border: 1px solid rgba(229, 231, 235, 1);
    text-align: left;
  }

  :global(th) {
    background-color: rgba(229, 231, 235, 0.1);
    font-weight: 600;
  }

  :global(tr:nth-child(even)) {
    background-color: rgba(229, 231, 235, 0.05);
  }
</style>
