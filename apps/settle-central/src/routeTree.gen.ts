/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MonthsImport } from './routes/months'
import { Route as InstructionsImport } from './routes/instructions'
import { Route as IndexImport } from './routes/index'
import { Route as SettlementsTableImport } from './routes/settlements/table'
import { Route as SettlementsSavedImport } from './routes/settlements/saved'
import { Route as SettlementsReportImport } from './routes/settlements/report'
import { Route as SettlementsRegionsImport } from './routes/settlements/regions'
import { Route as SettlementsReportIndexImport } from './routes/settlements/report/index'
import { Route as SettlementsReportXmlImport } from './routes/settlements/report/xml'
import { Route as SettlementsReportSummaryImport } from './routes/settlements/report/summary'
import { Route as RegionYearMonthImport } from './routes/$region.$year.$month'
import { Route as SettlementsRegionCountryIndexImport } from './routes/settlements/$region/$country/index'
import { Route as SettlementsRegionCountryXmlImport } from './routes/settlements/$region/$country/xml'
import { Route as SettlementsRegionCountrySummaryImport } from './routes/settlements/$region/$country/summary'

// Create/Update Routes

const MonthsRoute = MonthsImport.update({
  id: '/months',
  path: '/months',
  getParentRoute: () => rootRoute,
} as any)

const InstructionsRoute = InstructionsImport.update({
  id: '/instructions',
  path: '/instructions',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SettlementsTableRoute = SettlementsTableImport.update({
  id: '/settlements/table',
  path: '/settlements/table',
  getParentRoute: () => rootRoute,
} as any)

const SettlementsSavedRoute = SettlementsSavedImport.update({
  id: '/settlements/saved',
  path: '/settlements/saved',
  getParentRoute: () => rootRoute,
} as any)

const SettlementsReportRoute = SettlementsReportImport.update({
  id: '/settlements/report',
  path: '/settlements/report',
  getParentRoute: () => rootRoute,
} as any)

const SettlementsRegionsRoute = SettlementsRegionsImport.update({
  id: '/settlements/regions',
  path: '/settlements/regions',
  getParentRoute: () => rootRoute,
} as any)

const SettlementsReportIndexRoute = SettlementsReportIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SettlementsReportRoute,
} as any)

const SettlementsReportXmlRoute = SettlementsReportXmlImport.update({
  id: '/xml',
  path: '/xml',
  getParentRoute: () => SettlementsReportRoute,
} as any)

const SettlementsReportSummaryRoute = SettlementsReportSummaryImport.update({
  id: '/summary',
  path: '/summary',
  getParentRoute: () => SettlementsReportRoute,
} as any)

const RegionYearMonthRoute = RegionYearMonthImport.update({
  id: '/$region/$year/$month',
  path: '/$region/$year/$month',
  getParentRoute: () => rootRoute,
} as any)

const SettlementsRegionCountryIndexRoute =
  SettlementsRegionCountryIndexImport.update({
    id: '/settlements/$region/$country/',
    path: '/settlements/$region/$country/',
    getParentRoute: () => rootRoute,
  } as any)

const SettlementsRegionCountryXmlRoute =
  SettlementsRegionCountryXmlImport.update({
    id: '/settlements/$region/$country/xml',
    path: '/settlements/$region/$country/xml',
    getParentRoute: () => rootRoute,
  } as any)

const SettlementsRegionCountrySummaryRoute =
  SettlementsRegionCountrySummaryImport.update({
    id: '/settlements/$region/$country/summary',
    path: '/settlements/$region/$country/summary',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/instructions': {
      id: '/instructions'
      path: '/instructions'
      fullPath: '/instructions'
      preLoaderRoute: typeof InstructionsImport
      parentRoute: typeof rootRoute
    }
    '/months': {
      id: '/months'
      path: '/months'
      fullPath: '/months'
      preLoaderRoute: typeof MonthsImport
      parentRoute: typeof rootRoute
    }
    '/settlements/regions': {
      id: '/settlements/regions'
      path: '/settlements/regions'
      fullPath: '/settlements/regions'
      preLoaderRoute: typeof SettlementsRegionsImport
      parentRoute: typeof rootRoute
    }
    '/settlements/report': {
      id: '/settlements/report'
      path: '/settlements/report'
      fullPath: '/settlements/report'
      preLoaderRoute: typeof SettlementsReportImport
      parentRoute: typeof rootRoute
    }
    '/settlements/saved': {
      id: '/settlements/saved'
      path: '/settlements/saved'
      fullPath: '/settlements/saved'
      preLoaderRoute: typeof SettlementsSavedImport
      parentRoute: typeof rootRoute
    }
    '/settlements/table': {
      id: '/settlements/table'
      path: '/settlements/table'
      fullPath: '/settlements/table'
      preLoaderRoute: typeof SettlementsTableImport
      parentRoute: typeof rootRoute
    }
    '/$region/$year/$month': {
      id: '/$region/$year/$month'
      path: '/$region/$year/$month'
      fullPath: '/$region/$year/$month'
      preLoaderRoute: typeof RegionYearMonthImport
      parentRoute: typeof rootRoute
    }
    '/settlements/report/summary': {
      id: '/settlements/report/summary'
      path: '/summary'
      fullPath: '/settlements/report/summary'
      preLoaderRoute: typeof SettlementsReportSummaryImport
      parentRoute: typeof SettlementsReportImport
    }
    '/settlements/report/xml': {
      id: '/settlements/report/xml'
      path: '/xml'
      fullPath: '/settlements/report/xml'
      preLoaderRoute: typeof SettlementsReportXmlImport
      parentRoute: typeof SettlementsReportImport
    }
    '/settlements/report/': {
      id: '/settlements/report/'
      path: '/'
      fullPath: '/settlements/report/'
      preLoaderRoute: typeof SettlementsReportIndexImport
      parentRoute: typeof SettlementsReportImport
    }
    '/settlements/$region/$country/summary': {
      id: '/settlements/$region/$country/summary'
      path: '/settlements/$region/$country/summary'
      fullPath: '/settlements/$region/$country/summary'
      preLoaderRoute: typeof SettlementsRegionCountrySummaryImport
      parentRoute: typeof rootRoute
    }
    '/settlements/$region/$country/xml': {
      id: '/settlements/$region/$country/xml'
      path: '/settlements/$region/$country/xml'
      fullPath: '/settlements/$region/$country/xml'
      preLoaderRoute: typeof SettlementsRegionCountryXmlImport
      parentRoute: typeof rootRoute
    }
    '/settlements/$region/$country/': {
      id: '/settlements/$region/$country/'
      path: '/settlements/$region/$country'
      fullPath: '/settlements/$region/$country'
      preLoaderRoute: typeof SettlementsRegionCountryIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface SettlementsReportRouteChildren {
  SettlementsReportSummaryRoute: typeof SettlementsReportSummaryRoute
  SettlementsReportXmlRoute: typeof SettlementsReportXmlRoute
  SettlementsReportIndexRoute: typeof SettlementsReportIndexRoute
}

const SettlementsReportRouteChildren: SettlementsReportRouteChildren = {
  SettlementsReportSummaryRoute: SettlementsReportSummaryRoute,
  SettlementsReportXmlRoute: SettlementsReportXmlRoute,
  SettlementsReportIndexRoute: SettlementsReportIndexRoute,
}

const SettlementsReportRouteWithChildren =
  SettlementsReportRoute._addFileChildren(SettlementsReportRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/instructions': typeof InstructionsRoute
  '/months': typeof MonthsRoute
  '/settlements/regions': typeof SettlementsRegionsRoute
  '/settlements/report': typeof SettlementsReportRouteWithChildren
  '/settlements/saved': typeof SettlementsSavedRoute
  '/settlements/table': typeof SettlementsTableRoute
  '/$region/$year/$month': typeof RegionYearMonthRoute
  '/settlements/report/summary': typeof SettlementsReportSummaryRoute
  '/settlements/report/xml': typeof SettlementsReportXmlRoute
  '/settlements/report/': typeof SettlementsReportIndexRoute
  '/settlements/$region/$country/summary': typeof SettlementsRegionCountrySummaryRoute
  '/settlements/$region/$country/xml': typeof SettlementsRegionCountryXmlRoute
  '/settlements/$region/$country': typeof SettlementsRegionCountryIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/instructions': typeof InstructionsRoute
  '/months': typeof MonthsRoute
  '/settlements/regions': typeof SettlementsRegionsRoute
  '/settlements/saved': typeof SettlementsSavedRoute
  '/settlements/table': typeof SettlementsTableRoute
  '/$region/$year/$month': typeof RegionYearMonthRoute
  '/settlements/report/summary': typeof SettlementsReportSummaryRoute
  '/settlements/report/xml': typeof SettlementsReportXmlRoute
  '/settlements/report': typeof SettlementsReportIndexRoute
  '/settlements/$region/$country/summary': typeof SettlementsRegionCountrySummaryRoute
  '/settlements/$region/$country/xml': typeof SettlementsRegionCountryXmlRoute
  '/settlements/$region/$country': typeof SettlementsRegionCountryIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/instructions': typeof InstructionsRoute
  '/months': typeof MonthsRoute
  '/settlements/regions': typeof SettlementsRegionsRoute
  '/settlements/report': typeof SettlementsReportRouteWithChildren
  '/settlements/saved': typeof SettlementsSavedRoute
  '/settlements/table': typeof SettlementsTableRoute
  '/$region/$year/$month': typeof RegionYearMonthRoute
  '/settlements/report/summary': typeof SettlementsReportSummaryRoute
  '/settlements/report/xml': typeof SettlementsReportXmlRoute
  '/settlements/report/': typeof SettlementsReportIndexRoute
  '/settlements/$region/$country/summary': typeof SettlementsRegionCountrySummaryRoute
  '/settlements/$region/$country/xml': typeof SettlementsRegionCountryXmlRoute
  '/settlements/$region/$country/': typeof SettlementsRegionCountryIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/instructions'
    | '/months'
    | '/settlements/regions'
    | '/settlements/report'
    | '/settlements/saved'
    | '/settlements/table'
    | '/$region/$year/$month'
    | '/settlements/report/summary'
    | '/settlements/report/xml'
    | '/settlements/report/'
    | '/settlements/$region/$country/summary'
    | '/settlements/$region/$country/xml'
    | '/settlements/$region/$country'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/instructions'
    | '/months'
    | '/settlements/regions'
    | '/settlements/saved'
    | '/settlements/table'
    | '/$region/$year/$month'
    | '/settlements/report/summary'
    | '/settlements/report/xml'
    | '/settlements/report'
    | '/settlements/$region/$country/summary'
    | '/settlements/$region/$country/xml'
    | '/settlements/$region/$country'
  id:
    | '__root__'
    | '/'
    | '/instructions'
    | '/months'
    | '/settlements/regions'
    | '/settlements/report'
    | '/settlements/saved'
    | '/settlements/table'
    | '/$region/$year/$month'
    | '/settlements/report/summary'
    | '/settlements/report/xml'
    | '/settlements/report/'
    | '/settlements/$region/$country/summary'
    | '/settlements/$region/$country/xml'
    | '/settlements/$region/$country/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  InstructionsRoute: typeof InstructionsRoute
  MonthsRoute: typeof MonthsRoute
  SettlementsRegionsRoute: typeof SettlementsRegionsRoute
  SettlementsReportRoute: typeof SettlementsReportRouteWithChildren
  SettlementsSavedRoute: typeof SettlementsSavedRoute
  SettlementsTableRoute: typeof SettlementsTableRoute
  RegionYearMonthRoute: typeof RegionYearMonthRoute
  SettlementsRegionCountrySummaryRoute: typeof SettlementsRegionCountrySummaryRoute
  SettlementsRegionCountryXmlRoute: typeof SettlementsRegionCountryXmlRoute
  SettlementsRegionCountryIndexRoute: typeof SettlementsRegionCountryIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  InstructionsRoute: InstructionsRoute,
  MonthsRoute: MonthsRoute,
  SettlementsRegionsRoute: SettlementsRegionsRoute,
  SettlementsReportRoute: SettlementsReportRouteWithChildren,
  SettlementsSavedRoute: SettlementsSavedRoute,
  SettlementsTableRoute: SettlementsTableRoute,
  RegionYearMonthRoute: RegionYearMonthRoute,
  SettlementsRegionCountrySummaryRoute: SettlementsRegionCountrySummaryRoute,
  SettlementsRegionCountryXmlRoute: SettlementsRegionCountryXmlRoute,
  SettlementsRegionCountryIndexRoute: SettlementsRegionCountryIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/instructions",
        "/months",
        "/settlements/regions",
        "/settlements/report",
        "/settlements/saved",
        "/settlements/table",
        "/$region/$year/$month",
        "/settlements/$region/$country/summary",
        "/settlements/$region/$country/xml",
        "/settlements/$region/$country/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/instructions": {
      "filePath": "instructions.tsx"
    },
    "/months": {
      "filePath": "months.tsx"
    },
    "/settlements/regions": {
      "filePath": "settlements/regions.tsx"
    },
    "/settlements/report": {
      "filePath": "settlements/report.tsx",
      "children": [
        "/settlements/report/summary",
        "/settlements/report/xml",
        "/settlements/report/"
      ]
    },
    "/settlements/saved": {
      "filePath": "settlements/saved.tsx"
    },
    "/settlements/table": {
      "filePath": "settlements/table.tsx"
    },
    "/$region/$year/$month": {
      "filePath": "$region.$year.$month.tsx"
    },
    "/settlements/report/summary": {
      "filePath": "settlements/report/summary.tsx",
      "parent": "/settlements/report"
    },
    "/settlements/report/xml": {
      "filePath": "settlements/report/xml.tsx",
      "parent": "/settlements/report"
    },
    "/settlements/report/": {
      "filePath": "settlements/report/index.tsx",
      "parent": "/settlements/report"
    },
    "/settlements/$region/$country/summary": {
      "filePath": "settlements/$region/$country/summary.tsx"
    },
    "/settlements/$region/$country/xml": {
      "filePath": "settlements/$region/$country/xml.tsx"
    },
    "/settlements/$region/$country/": {
      "filePath": "settlements/$region/$country/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
