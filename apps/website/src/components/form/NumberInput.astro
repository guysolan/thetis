---
interface Props {
    id: string;
    name: string;
    label: string;
}

const { id, name, label } = Astro.props;
import { Minus, Plus } from 'lucide-astro';
---

<div class="flex flex-row gap-4 w-full">
    <label class="block w-full font-medium text-lg">{label}</label>
    <div class="flex justify-center items-center border-gray-400 focus-within:border-primary bg-white border rounded-sm hover:ring-gray-400 hover:ring-1 focus-within:ring-primary focus-within:ring-1 w-full min-w-60 font-semibold text-3xl transition-all duration-100 delay-50 ease">
        <button
            type="button"
            class="flex items-center pr-[.325em] pl-[.5em]"
            onclick={`decrementValue('${id}')`}
        >
            <Minus className="size-4" />
        </button>
        <input
            type="number"
            {id}
            {name}
            min="0"
            value="0"
            class="border-0 hover:border-0 focus:border-0 bg-transparent py-2 hover:ring-0 focus:ring-0 w-[1.5em] min-w-16 text-center [&::-webkit-inner-spin-button]:appearance-none [&::-webkit-outer-spin-button]:appearance-none [appearance:textfield] hover:outline-none focus:outline-none"
        />
        <button
            type="button"
            class="flex items-center pr-[.5em] pl-[.325em]"
            onclick={`incrementValue('${id}')`}
        >
            <Plus className="size-4" />
        </button>
    </div>
</div>

<script>
    // Make sure functions are available in the global scope
    window.incrementValue = function(id: string) {
        const input = document.getElementById(id) as HTMLInputElement;
        if (input) {
            input.value = String(parseInt(input.value) + 1);
        }
    }

    window.decrementValue = function(id: string) {
        const input = document.getElementById(id) as HTMLInputElement;
        if (input) {
            const newValue = Math.max(0, parseInt(input.value) - 1);
            input.value = String(newValue);
        }
    }
</script> 