---
import IncidenceCharts from "./IncidenceCharts.astro";
import LongReport from "./LongReport.astro";
import { ChartBar, FileText, Flag } from "lucide-astro";
import countryData from "./data.json";

interface IncidenceData {
    trend: string;
    direction: string;
    [key: string]: string | number;
}

interface RawCountryData {
    country: string;
    code: string;
    source: string;
    sample_size: string;
    surgical_rate: {
        [key: string]: number | string;
    };
    incidence: IncidenceData;
    demographics: {
        [key: string]: string | number;
    };
    key_finding: string;
    outcomes?: {
        [key: string]: string | number;
    };
}

interface ProcessedCountryData extends RawCountryData {
    latest: {
        value: number;
        year: number;
    } | null;
}

// Prepare overview table data (latest incidence per country)
const latestIncidence = (c: RawCountryData) => {
    if (!c.incidence) return null;
    const years = Object.keys(c.incidence)
        .filter((key) => !isNaN(Number(key)))
        .map(Number)
        .sort((a, b) => b - a);

    if (years.length === 0) return null;

    const latestYear = years[0];
    const value = c.incidence[latestYear];

    if (typeof value !== "number") return null;

    return {
        year: latestYear,
        value: value,
    };
};

const overview = countryData
    .map((c) => ({ ...c, latest: latestIncidence(c) }))
    .filter((c): c is ProcessedCountryData => c.latest !== null)
    .sort((a, b) => (b.latest?.value || 0) - (a.latest?.value || 0));

function getUnicodeFlagIcon(code: string): string {
    const codePoints = code
        .toUpperCase()
        .split("")
        .map((char) => 127397 + char.charCodeAt(0));
    return String.fromCodePoint(...codePoints);
}
---

<div class="mx-auto px-2 sm:px-4 pb-8 max-w-5xl">
    <!-- Tab navigation -->
    <div class="mb-8 border-gray-200 border-b">
        <ul
            class="flex flex-wrap -mb-px font-medium text-sm text-center"
            role="tablist"
        >
            <li class="mr-2" role="presentation">
                <button
                    id="data-tab"
                    data-tabs-target="#data"
                    type="button"
                    role="tab"
                    aria-controls="data"
                    aria-selected="true"
                    class="inline-block p-4 border-emerald-600 border-b-2 rounded-t-lg active"
                >
                    <div class="flex items-center">
                        <ChartBar size={16} class="mr-2" />Data Visualisation
                    </div>
                </button>
            </li>
            <li class="mr-2" role="presentation">
                <button
                    id="overview-tab"
                    data-tabs-target="#overview"
                    type="button"
                    role="tab"
                    aria-controls="overview"
                    aria-selected="false"
                    class="inline-block p-4 hover:border-gray-300 border-transparent border-b-2 rounded-t-lg hover:text-gray-600"
                >
                    <div class="flex items-center">
                        <Flag size={16} class="mr-2" />Country Overview
                    </div>
                </button>
            </li>
            <li role="presentation">
                <button
                    id="report-tab"
                    data-tabs-target="#report"
                    type="button"
                    role="tab"
                    aria-controls="report"
                    aria-selected="false"
                    class="inline-block p-4 hover:border-gray-300 border-transparent border-b-2 rounded-t-lg hover:text-gray-600"
                >
                    <div class="flex items-center">
                        <FileText size={16} class="mr-2" />Detailed Report
                    </div>
                </button>
            </li>
        </ul>
    </div>

    <!-- Tab panels -->
    <div id="tab-content">
        <div
            id="data"
            role="tabpanel"
            aria-labelledby="data-tab"
            class="block bg-gray-50 p-2 sm:p-4 rounded-lg"
        >
            <IncidenceCharts />
        </div>

        <div
            id="overview"
            role="tabpanel"
            aria-labelledby="overview-tab"
            class="hidden bg-gray-50 p-2 sm:p-4 rounded-lg"
        >
            <h3 class="mb-3 font-semibold text-xl">
                Latest Incidence by Country
            </h3>
            <div class="overflow-x-auto">
                <table class="w-full text-gray-700 text-sm text-left">
                    <thead class="bg-gray-100 text-gray-700 text-xs uppercase">
                        <tr>
                            <th scope="col" class="px-6 py-3">Country</th>
                            <th scope="col" class="px-6 py-3"
                                >Latest Incidence</th
                            >
                            <th scope="col" class="px-6 py-3">Key Finding</th>
                            <th scope="col" class="px-6 py-3">Source</th>
                        </tr>
                    </thead>
                    <tbody>
                        {
                            overview?.map((c) => (
                                <tr class="bg-white border-b">
                                    <td class="flex items-center px-6 py-4 font-medium whitespace-nowrap">
                                        {c.code && (
                                            <span class="mr-2">
                                                {getUnicodeFlagIcon(c.code)}
                                            </span>
                                        )}
                                        {c.country}
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        {c.latest
                                            ? `${c.latest.value} / 100k (${c.latest.year})`
                                            : "N/A"}
                                    </td>
                                    <td class="px-6 py-4 max-w-md">
                                        <div class="text-sm">
                                            {c.key_finding || c.incidence.trend}
                                        </div>
                                    </td>
                                    <td class="px-6 py-4">
                                        <a
                                            href={c.source}
                                            target="_blank"
                                            rel="noopener noreferrer"
                                            class="text-blue-600 hover:text-blue-800 text-xs break-all"
                                        >
                                            {c.source}
                                        </a>
                                    </td>
                                </tr>
                            )) || (
                                <tr>
                                    <td colspan="4" class="py-4 text-center">
                                        No data available
                                    </td>
                                </tr>
                            )
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div
            id="report"
            role="tabpanel"
            aria-labelledby="report-tab"
            class="hidden bg-gray-50 p-2 sm:p-4 rounded-lg"
        >
            <LongReport />
        </div>
    </div>
</div>

<script>
    // Simple tab switching (no external lib)
    const tabButtons = document.querySelectorAll('[role="tab"]');
    const tabPanels = document.querySelectorAll('[role="tabpanel"]');

    tabButtons.forEach((btn) => {
        btn.addEventListener("click", () => {
            tabButtons.forEach((b) => {
                b.classList.remove("active", "border-emerald-600");
                b.classList.add("border-transparent");
                b.setAttribute("aria-selected", "false");
            });
            tabPanels.forEach((p) => p.classList.add("hidden"));

            btn.classList.add("active", "border-emerald-600");
            btn.classList.remove("border-transparent");
            btn.setAttribute("aria-selected", "true");

            const targetId = btn.getAttribute("data-tabs-target").substring(1);
            document.getElementById(targetId).classList.remove("hidden");
        });
    });
</script>
